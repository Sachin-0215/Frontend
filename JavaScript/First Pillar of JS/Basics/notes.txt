Given a linked list , return the length of the longest palindrome list that is present in the given linked list.

Example 1:
Sample Input:
						           N
head = [                                              1 <- 2 <- 3 -> 3 -> 2 -> 4                                              
                                                        
Sample Output:                                               
public int maxPalindrome(ListNode head) {
        //You can code here

        ListNode curr = head;
        ListNode prev = null;
        int ans = 0;

        while(curr !=  null){
            ListNode next = curr.next;
            curr.next = prev;

            int lengthNode1 = 2*commonNodes(prev,next) +1;
            int lengthNode2 = 2*commonNodes(curr,next);//1

            ans = Math.max(ans, Math.max(lengthNode1, lengthNode2));//1
            prev = curr;
            curr = next;
        }
        return ans;
    }

    private static int commonNodes(ListNode a, ListNode b){
        int count = 0;
        while(a != null && b != null){
                if(a.val == b.val){
                    count++;
                     a = a.next;
                     b = b.next;
                }else break;
        }
        return count;
    }




































